@{
    ViewData["Title"] = "Home Page";
    var currentUserName = User.Identity.Name;
}

<script>
    document.addEventListener("DOMContentLoaded", function () {
        console.log("DOM fully loaded and parsed");

        Array.from(document.querySelectorAll(".add-comment-btn")).forEach(function (btn) {
            btn.addEventListener("click", function () {
                console.log("Add Comment Button Clicked");
                $('#addCommentModal').modal('show');
            });
        });

        Array.from(document.querySelectorAll(".edit-comment-btn")).forEach(function (btn) {
            btn.addEventListener("click", function () {
                const commentId = this.getAttribute("data-comment-id");
                console.log("Edit Comment Button Clicked, Comment ID: ", commentId);
            });
        });

        Array.from(document.querySelectorAll(".delete-comment-btn")).forEach(function (btn) {
            btn.addEventListener("click", function () {
                const commentId = this.getAttribute("data-comment-id");
                console.log("Delete Comment Button Clicked, Comment ID: ", commentId);
            });
        });
    });
</script>

<!-- Bootstrap container -->
<div class="container">
    <!-- Title -->
    <div class="text-center mt-5">
        <h1 class="display-4">Quickfire Bulletin</h1>
        <form asp-controller="Home" asp-action="index" method="post">
            <button type="submit" class="btn btn-success">Seed Database</button>
        </form>
    </div>

    @model List<Quickfire_Bulletin.Models.NewsArticle>

    <!-- Loop through articles -->
    @foreach (var article in Model)
    {
        if (article != null)
        {
            <!-- Article -->
            <div class="article my-5 border-bottom pb-5">
                <h2 class="font-weight-bold">@article.Title</h2>
                <p>@article.Description</p>
                <div class="content">
                    <p>@Html.Raw(article.Content.Replace("\n\n", "</p><p>"))</p>
                </div>
                <small class="text-muted">
                    Published on: @article.PubDate <br>
                    Source: @article.SourceId
                </small>

                <!-- Comment Section -->
                <div class="comment-section my-5">
                    @if (User.Identity.IsAuthenticated)
                    {
                        <button type="button" class="btn btn-success add-comment-btn">Add Comment</button>
                    }
                    else
                    {
                        <button type="button" class="btn btn-success add-comment-btn" disabled>You must be logged in to add a comment</button>
                    }

                    <!-- Existing Comments -->
                    <div class="existing-comments">
                        @if (article.Comments != null && article.Comments.Count > 0)
                        {
                            foreach (var comment in article.Comments.OrderBy(c => c.CreatedOn))
                            {
                                <div class="comment border rounded p-3 mb-3">
                                    <p>@comment.CommentContent</p>
                                    <small class="text-muted">Posted by: @comment.Name at @comment.CreatedOn</small>

                                    @if (User.Identity.IsAuthenticated && comment.Name == currentUserName)
                                    {
                                        <button type="button" class="btn btn-primary edit-comment-btn" data-comment-id="@comment.Id">Edit</button>
                                        <button type="button" class="btn btn-danger delete-comment-btn" data-comment-id="@comment.Id">Delete</button>
                                    }
                                </div>
                            }
                        }
                        else
                        {
                            <p class="text-muted">No comments yet. Be the first to comment!</p>
                        }
                    </div>
                </div>
            </div>
        }
    }
</div>
